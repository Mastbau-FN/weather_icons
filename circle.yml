version: 2.1
executors:
  base-executor:
    docker:
      - image: worldturtlemedia/flutter_node:latest
    working_directory: /project

commands:
  installNodeDeps:
    description: 'Install node dependencies from the cache, and save the cache'
    steps:
      - restore_cache:
          name: Restore Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          path: ~/.cache/yarn

  installFlutterDeps:
    description: 'Install flutter dependencies from the cache, and save the cache'
    steps:
      - restore_cache:
          name: Restore Flutter Package Cache
          key: flutter-packages-{{ checksum "pubspec.lock" }}
      - run:
          name: Get Flutter Dependencies
          command: flutter pub get
      - save_cache:
          name: Save Flutter Package Cache
          key: flutter-packages-{{ checksum "pubspec.lock" }}
          path: ~/.pub-cache

  restoreAndroidDeps:
    description: 'Restore the Android deps from cache'
    steps:
      - restore_cache:
          name: Restore Android dependencies
          key: jars-{{ checksum "example/android/build.gradle" }}

  saveAndroidDeps:
    description: 'Save the Android deps to the cache'
    steps:
      - save_cache:
          name: Save Android dependencies
          key: jars-{{ checksum "example/android/build.gradle" }}
          path: ~/.gradle

jobs:
  build_library:
    executor: base-executor
    steps:
      - checkout
      - installNodeDeps
      - installFlutterDeps
      - run:
          name: Lint all source files
          command: yarn lint
      - run:
          name: Run all the tests
          command: yarn test --coverage
      - run:
          name: Report coverage
          command: yarn report-coverage
      - store_artifacts:
          path: ./lib
          destination: lib

  build_sample:
    executor: base-executor
    steps:
      - checkout
      - installFlutterDeps
      - restoreAndroidDeps
      - run:
          name: Build sample APK
          command: cd example && flutter build apk
      - saveAndroidDeps
      - persist_to_workspace:
          root: example/build/app/outputs/apk/release/
          paths:
            - example/build/app/outputs/apk/release/app-release.apk
      - store_artifacts:
          path: example/build/app/outputs/apk/release
          destination: outputs

  release:
    executor: base-executor
    steps:
      - checkout
      - attach_workspace:
          at: /project/example/build/app/outputs/apk/release/
      - run: |
          FILE=/project/example/build/app/outputs/apk/release/app-release.apk
          if test -f "$FILE"; then
            echo "Found the apk!";
          else
            echo "Unable to find the build sample apk!"; exit 1
          fi
      - installNodeDeps
      - installFlutterDeps
      - run:
          name: Publish if update is required
          command: yarn semantic-release

workflows:
  version: 2.1
  build_and_release:
    jobs:
      - build_library
      - build_sample:
          requires:
            - build_library
      - release:
          requires:
            - build_sample
          filters:
            branches:
              only: master
