version: 2.1
executors:
  base-executor:
    docker:
      - image: worldturtlemedia/flutter_node:latest

commands:
  install_node_deps:
    description: 'Install node dependencies from the cache, and save the cache'
    steps:
      - restore_cache:
          name: Restore Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  install_flutter_deps:
    description: 'Install flutter dependencies from the cache, and save the cache'
    steps:
      - restore_cache:
          name: Restore Flutter Package Cache
          key: flutter-packages-{{ checksum "pubspec.lock" }}
      - run:
          name: Get Flutter Dependencies
          command: flutter pub get
      - save_cache:
          name: Save Flutter Package Cache
          key: flutter-packages-{{ checksum "pubspec.lock" }}
          paths:
            - ~/.pub-cache

  restore_android_deps:
    description: 'Restore the Android deps from cache'
    steps:
      - restore_cache:
          name: Restore Android dependencies
          key: jars-{{ checksum "example/android/build.gradle" }}

  save_android_deps:
    description: 'Save the Android deps to the cache'
    steps:
      - save_cache:
          name: Save Android dependencies
          key: jars-{{ checksum "example/android/build.gradle" }}
          paths:
            - ~/.gradle

jobs:
  install_dependencies:
    executor: base-executor
    steps:
      - checkout
      - install_node_deps
      - install_flutter_deps

  build_library:
    executor: base-executor
    steps:
      - checkout
      - install_node_deps
      - install_flutter_deps
      - run:
          name: Lint all source files
          command: yarn lint
      - run:
          name: Run all the tests
          command: yarn test --coverage
      - run:
          name: Report coverage
          command: yarn report-coverage
      - store_artifacts:
          path: ./lib
          destination: lib

  build_sample:
    executor: base-executor
    steps:
      - checkout
      - install_flutter_deps
      - restore_android_deps
      - run:
          name: Build sample APK
          command: cd example && flutter build apk
      - save_android_deps
      - persist_to_workspace:
          root: ~/project/example/build/app/outputs/apk/release/
          paths:
            - app-release.apk
      - store_artifacts:
          path: example/build/app/outputs/apk/release
          destination: outputs

  release:
    executor: base-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project/example/build/app/outputs/apk/release/
      - install_node_deps
      - install_flutter_deps
      - run:
          name: Prepare release
          command: yarn semantic-release
      - run:
          name: Publish if required
          command: ./tool/publish.sh

workflows:
  version: 2.1
  build_and_release:
    jobs:
      - install_dependencies
      - build_library:
          requires:
            - install_dependencies
      - build_sample:
          requires:
            - install_dependencies
      - release:
          requires:
            - build_library
            - build_sample
          filters:
            branches:
              only: master
